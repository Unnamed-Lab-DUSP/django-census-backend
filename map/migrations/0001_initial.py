# Generated by Django 4.2.2 on 2023-07-12 03:24

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fips', models.CharField(help_text='Five-digit county FIPS.', max_length=5, unique=True)),
                ('name', models.CharField(blank=True, help_text='Longhand county name.', max_length=21)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fips', models.CharField(help_text='Two-digit state FIPS.', max_length=2, unique=True)),
                ('name', models.CharField(blank=True, help_text='Longhand state name.', max_length=14)),
                ('abbrev', models.CharField(blank=True, help_text='Two-letter state abbreviation.', max_length=2)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Tract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fips', models.CharField(help_text='Eleven-digit tract FIPS.', max_length=6, unique=True)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('county_fips', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.county')),
                ('state_fips', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.state')),
            ],
        ),
        migrations.CreateModel(
            name='PPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateField(blank=True, help_text='\n            Date last updated (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('version', models.DecimalField(blank=True, decimal_places=1, help_text='Dataset version.', max_digits=5)),
                ('added', models.DateField(blank=True, help_text='\n            Date added (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('msa', models.BooleanField(help_text='\n            Whether county is MSA or non-MSA.\n            ')),
                ('pp', models.BooleanField(help_text='\n            Whether county is persistent poverty county \n            ')),
                ('county_geoid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.county')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FFE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateField(blank=True, help_text='\n            Date last updated (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('version', models.DecimalField(blank=True, decimal_places=1, help_text='Dataset version.', max_digits=5)),
                ('added', models.DateField(blank=True, help_text='\n            Date added (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('msa', models.BooleanField(help_text='\n            Whether county is MSA or non-MSA.\n            ')),
                ('ffe', models.BooleanField(help_text='\n            >= 0.17pct direct emp | >= 25pct local tax revs \n            related to coal, oil, or natural gas;\n            ')),
                ('unemp', models.BooleanField(help_text="\n            County unemployment rate >= nat'l avg?\n            ")),
                ('county_geoid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.county')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='county',
            name='state_fips',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.state'),
        ),
        migrations.CreateModel(
            name='CoalClosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateField(blank=True, help_text='\n            Date last updated (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('version', models.DecimalField(blank=True, decimal_places=1, help_text='Dataset version.', max_digits=5)),
                ('added', models.DateField(blank=True, help_text='\n            Date added (n.b., reflects data as acquired,\n            not this database instance).\n            ')),
                ('mine', models.BooleanField(help_text='\n            Whether a coal mine has closed after 1999.\n            ')),
                ('generator', models.BooleanField(help_text='\n            Whether a coal-fired electric generating unit\n            has been retired after 2009.\n            ')),
                ('adjacent', models.BooleanField(help_text='\n            Whether tract adjoins coal closure tract.\n            ')),
                ('tract_geoid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.tract')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
